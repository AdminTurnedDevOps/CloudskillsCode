trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'AKS_Cluster'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'drop'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform 0.12.13'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : init'
    inputs:
      backendServiceArm: '$(subscription)'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
      backendAzureRmResourceGroupName: '$(resourceGroup)'
      backendAzureRmStorageAccountName: '$(storageAccount)'
      backendAzureRmContainerName: '$(containerName)'
      backendAzureRmKey: tf/terraform.tfstate

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : plan'
    inputs:
      command: plan
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
      environmentServiceNameAzureRM: '$(subscription)'
      
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : apply'
    inputs:
      command: apply
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
      environmentServiceNameAzureRM: '$(subscription)'